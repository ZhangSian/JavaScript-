一、函数的概念：
     对任意程序代码进行封装
二、定义函数的语法    //也可以称之为封装函数
    1、声明式：
        function  函数名(){                           eg: function fn(){

              }                                          }  //创建了一个名为fn 的函数                                                             }

    2、赋值式：
        var 函数名 = function(){                       eg:  var fn = function(){
             
                 }                                          }                                                   }

当我们定义好一个函数后，想要调用函数，就需要使用函数调用语句

三、函数调用语句
  函数名();      eg: 在上面，我们已经定义好了fn这个函数，若想调用，只需要： fn(); 即可

四、浏览器执行函数的过程

  js引擎（浏览器）---> 执行函数调用语句----> 根据函数名找到对应的封装的函数--->执行函数体中的代码--->执行完后回到调用函数处继续执行后续代码


五、函数参数   ---->  形参，实参

  eg:  function fn(x,y){                // 该函数中的 x y 就是形式参数。 简称形参。形参之间需用','隔开。形参需要同实参一一对应

  }

  fn(1,2)                              // fn(1,2)中的1,2就是实参，

  若形参数量多余实参。前面与实参对应的形参依旧与形参一一对应。而多余的形参则会 转为未定义的状态  

六、 函数返回值

  通过return 进行返回值

七、 函数类型

   1、无参，无返回值
      function fn(){

      }
      fn();
    2、有参无返回值
       function  fn(n){

       }
       fn(100)
    3、无参，有返回值
        function  fn(){
          return 100;
        }
        fn()
    4、有参，有返回值
       function fn(){

         return 100
       }
       fn(10)
